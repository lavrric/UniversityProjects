a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 _ + - * / % < > <= = == >= && || < > { } ( ) [ ] " , int string char bool array if while for READ PRINT BEGIN END STOP true false epsilon endline
OPERATOR IDENTIFIER letter digit expression term RELATION condition ioStmt assignStmt simplStmt ifStmt whileStmt structStmt stmt stmtlist cmpdStmt primType arrType type declaration program declaration_list nzdigit string CONSTANT intconst no strconst boolconst
program
OPERATOR -> + | - | * | / | % | && | ||
IDENTIFIER -> epsilon | letter | _ | IDENTIFIER letter | IDENTIFIER digit
letter -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
digit -> 0 | nzdigit
nzdigit -> 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
expression -> epsilon | term | expression OPERATOR term
term -> IDENTIFIER | CONSTANT | ( expression )
RELATION -> < | <= | = | != | >= | >
condition -> expression RELATION expression
ioStmt -> READ expression | PRINT expression
assignStmt -> IDENTIFIER = expression
simplStmt -> ioStmt | assignStmt
ifStmt -> if ( condition ) stmtlist | if ( condition ) stmtlist else stmtlist
whileStmt -> while ( condition ) stmtlist
structStmt -> ifStmt | whileStmt | cmpdStmt
stmt -> structStmt | simplStmt | declaration
stmtlist -> stmt | stmtlist endline stmt 
cmpdStmt -> BEGIN stmtlist END
primType -> int | string | bool | char
arrType -> array ( primType ) [ no ]
type -> primType | arrType
declaration_list -> IDENTIFIER | declaration_list , IDENTIFIER
declaration -> type { declaration_list }
program -> stmtlist
CONSTANT -> intconst | strconst | boolconst
intconst -> no | - no | + no
no -> digit | nzdigit no
strconst -> " string "
string -> character | letter string | digit string
boolconst -> true | false